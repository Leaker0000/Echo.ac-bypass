#include <iostream>
#include <windows.h>
#include <tlhelp32.h>
 
bool killProc(const std::string& processName) {
    PROCESSENTRY32 pe32;
    pe32.dwSize = sizeof(PROCESSENTRY32);
    HANDLE hSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
    if (hSnapshot == INVALID_HANDLE_VALUE)
        return false;
    if (Process32First(hSnapshot, &pe32)) {
        do {
            if (processName == pe32.szExeFile) {
                HANDLE hProcess = OpenProcess(PROCESS_TERMINATE, FALSE, pe32.th32ProcessID);
 
                if (hProcess == NULL) 
                    continue;
 
                if (TerminateProcess(hProcess, 0))
                    std::cout << processName << " found and closed." << std::endl;
 
                CloseHandle(hProcess);
                break;
            }
        } while (Process32Next(hSnapshot, &pe32));
    }
    CloseHandle(hSnapshot);
    return true;
}
 
int main() {
    do
    {
        printf("Echo.ac application is expected to open.\n");
        system("cls"); // sorry for [removed] code
    } while (killProc("ntfsDump.exe"));
    printf("[+] It was successfully bypassed.  x)\n");
    printf("[+] Press any key for exit. ");
    std::cin.get();
    return 0;
}
